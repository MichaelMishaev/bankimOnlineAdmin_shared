const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.CONTENT_DATABASE_URL
});

async function findNames() {
  try {
    console.log('üîç Searching for specific names in database...');
    
    const result = await pool.query(`
      SELECT 
        ci.content_key,
        ci.screen_location,
        ct.language_code,
        ct.content_value
      FROM content_items ci
      LEFT JOIN content_translations ct ON ci.id = ct.content_item_id
      WHERE ct.content_value ILIKE '%6-12 –º–µ—Å—è—Ü–µ–≤%' 
         OR ct.content_value ILIKE '%–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞%'
         OR ct.content_value ILIKE '%–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞%'
         OR ct.content_value ILIKE '%–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏–ø–æ—Ç–µ–∫–µ%'
      ORDER BY ci.content_key, ct.language_code
    `);
    
    if (result.rows.length === 0) {
      console.log('‚ùå No exact matches found for the specific names');
      
      // Search for similar patterns
      const similarResult = await pool.query(`
        SELECT 
          ci.content_key,
          ci.screen_location,
          ct.language_code,
          ct.content_value
        FROM content_items ci
        LEFT JOIN content_translations ct ON ci.id = ct.content_item_id
        WHERE ct.content_value ILIKE '%–º–µ—Å—è—Ü%' 
           OR ct.content_value ILIKE '%–ø–∞—Ä—Ç–Ω–µ—Ä%'
           OR ct.content_value ILIKE '%–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤%'
           OR ct.content_value ILIKE '%–ø—Ä–µ–¥–ª–æ–∂–µ–Ω%'
        ORDER BY ci.content_key, ct.language_code
        LIMIT 20
      `);
      
      console.log('üîç Similar matches found:');
      similarResult.rows.forEach(row => {
        console.log(`  ${row.content_key} | ${row.screen_location} | ${row.language_code} | ${row.content_value}`);
      });
    } else {
      console.log('‚úÖ Found exact matches:');
      result.rows.forEach(row => {
        console.log(`  ${row.content_key} | ${row.screen_location} | ${row.language_code} | ${row.content_value}`);
      });
    }
    
    await pool.end();
  } catch (error) {
    console.error('‚ùå Error:', error);
    await pool.end();
  }
}

findNames(); 