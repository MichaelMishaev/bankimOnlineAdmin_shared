const { Pool } = require('pg');
require('dotenv').config();

// Database connection configuration
const pool = new Pool({
  connectionString: process.env.CONTENT_DATABASE_URL || process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

async function addMortgageRefiContent() {
  try {
    console.log('üîß Adding mortgage refinancing content to database...\n');

    // Start transaction
    await pool.query('BEGIN');

    // Define the mortgage refinancing steps
    const mortgageRefiSteps = [
      {
        screen_location: 'refinance_mortgage_1',
        content_key: 'app.mortgage_refi.step1.title',
        component_type: 'title',
        title_ru: '–†–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏',
        title_he: '◊û◊ó◊ñ◊ï◊® ◊û◊©◊õ◊†◊™◊ê',
        title_en: 'Mortgage Refinance'
      },
      {
        screen_location: 'refinance_mortgage_2',
        content_key: 'app.mortgage_refi.step2.title',
        component_type: 'title',
        title_ru: '–ë–∞–Ω–∫ —Ç–µ–∫—É—â–µ–π –∏–ø–æ—Ç–µ–∫–∏',
        title_he: '◊ë◊†◊ß ◊î◊û◊©◊õ◊†◊™◊ê ◊î◊†◊ï◊õ◊ó◊ô◊™',
        title_en: 'Current Bank'
      },
      {
        screen_location: 'refinance_mortgage_3',
        content_key: 'app.mortgage_refi.step3.title',
        component_type: 'title',
        title_ru: '–î–∞–Ω–Ω—ã–µ –æ –¥–æ—Ö–æ–¥–∞—Ö',
        title_he: '◊†◊™◊ï◊†◊ô ◊î◊õ◊†◊°◊î',
        title_en: 'Income Data'
      },
      {
        screen_location: 'refinance_mortgage_4',
        content_key: 'app.mortgage_refi.step4.title',
        component_type: 'title',
        title_ru: '–í—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã',
        title_he: '◊ë◊ó◊ô◊®◊™ ◊™◊ï◊õ◊†◊ô◊™',
        title_en: 'Program Selection'
      }
    ];

    console.log(`Creating ${mortgageRefiSteps.length} mortgage refinancing steps...`);

    for (const step of mortgageRefiSteps) {
      console.log(`Creating step: ${step.screen_location}`);
      
      // Insert content item
      const contentResult = await pool.query(`
        INSERT INTO content_items (content_key, component_type, screen_location, is_active, page_number)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING id
      `, [step.content_key, step.component_type, step.screen_location, true, 1]);
      
      const contentId = contentResult.rows[0].id;
      console.log(`  - Created content item with ID: ${contentId}`);

      // Insert translations
      await pool.query(`
        INSERT INTO content_translations (content_item_id, language_code, content_value)
        VALUES ($1, 'ru', $2), ($1, 'he', $3), ($1, 'en', $4)
      `, [contentId, step.title_ru, step.title_he, step.title_en]);
      
      console.log(`  - Added translations for ${step.screen_location}`);
    }

    // Add some additional content items for each step to make them more realistic
    const additionalContent = [
      // Step 1 content
      {
        screen_location: 'refinance_mortgage_1',
        content_key: 'app.mortgage_refi.step1.description',
        component_type: 'text',
        title_ru: '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ø–æ—Ç–µ–∫–∏',
        title_he: '◊î◊ñ◊ü ◊†◊™◊ï◊†◊ô◊ù ◊ú◊ó◊ô◊©◊ï◊ë ◊û◊ó◊ñ◊ï◊® ◊û◊©◊õ◊†◊™◊ê',
        title_en: 'Enter data to calculate mortgage refinancing'
      },
      {
        screen_location: 'refinance_mortgage_1',
        content_key: 'app.mortgage_refi.step1.button',
        component_type: 'button',
        title_ru: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
        title_he: '◊î◊û◊©◊ö',
        title_en: 'Continue'
      },
      
      // Step 2 content
      {
        screen_location: 'refinance_mortgage_2',
        content_key: 'app.mortgage_refi.step2.description',
        component_type: 'text',
        title_ru: '–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º —É –≤–∞—Å —Ç–µ–∫—É—â–∞—è –∏–ø–æ—Ç–µ–∫–∞',
        title_he: '◊ë◊ó◊® ◊ê◊™ ◊î◊ë◊†◊ß ◊©◊ë◊ï ◊ô◊© ◊ú◊ö ◊û◊©◊õ◊†◊™◊ê ◊†◊ï◊õ◊ó◊ô◊™',
        title_en: 'Select the bank where you have your current mortgage'
      },
      {
        screen_location: 'refinance_mortgage_2',
        content_key: 'app.mortgage_refi.step2.button',
        component_type: 'button',
        title_ru: '–î–∞–ª–µ–µ',
        title_he: '◊î◊ë◊ê',
        title_en: 'Next'
      },
      
      // Step 3 content
      {
        screen_location: 'refinance_mortgage_3',
        content_key: 'app.mortgage_refi.step3.description',
        component_type: 'text',
        title_ru: '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –¥–æ—Ö–æ–¥—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞',
        title_he: '◊¶◊ô◊ô◊ü ◊ê◊™ ◊î◊õ◊†◊°◊ï◊™◊ô◊ö ◊ú◊ó◊ô◊©◊ï◊ë',
        title_en: 'Specify your income for calculation'
      },
      {
        screen_location: 'refinance_mortgage_3',
        content_key: 'app.mortgage_refi.step3.button',
        component_type: 'button',
        title_ru: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å',
        title_he: '◊ó◊©◊ë',
        title_en: 'Calculate'
      },
      
      // Step 4 content
      {
        screen_location: 'refinance_mortgage_4',
        content_key: 'app.mortgage_refi.step4.description',
        component_type: 'text',
        title_ru: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è',
        title_he: '◊ë◊ó◊® ◊™◊ï◊õ◊†◊ô◊™ ◊û◊ó◊ñ◊ï◊® ◊û◊©◊õ◊†◊™◊ê ◊û◊™◊ê◊ô◊û◊î',
        title_en: 'Select a suitable mortgage refinancing program'
      },
      {
        screen_location: 'refinance_mortgage_4',
        content_key: 'app.mortgage_refi.step4.button',
        component_type: 'button',
        title_ru: '–ó–∞–≤–µ—Ä—à–∏—Ç—å',
        title_he: '◊°◊ô◊ô◊ù',
        title_en: 'Complete'
      }
    ];

    console.log(`\nCreating ${additionalContent.length} additional content items...`);

    for (const content of additionalContent) {
      console.log(`Creating content: ${content.content_key}`);
      
      // Insert content item
      const contentResult = await pool.query(`
        INSERT INTO content_items (content_key, component_type, screen_location, is_active, page_number)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING id
      `, [content.content_key, content.component_type, content.screen_location, true, 1]);
      
      const contentId = contentResult.rows[0].id;

      // Insert translations
      await pool.query(`
        INSERT INTO content_translations (content_item_id, language_code, content_value)
        VALUES ($1, 'ru', $2), ($1, 'he', $3), ($1, 'en', $4)
      `, [contentId, content.title_ru, content.title_he, content.title_en]);
      
      console.log(`  - Created content item with ID: ${contentId}`);
    }

    // Commit transaction
    await pool.query('COMMIT');
    
    console.log('\n‚úÖ Successfully added mortgage refinancing content to database!');
    
    // Verify the content was added
    console.log('\nüîç Verifying added content...');
    const verifyResult = await pool.query(`
      SELECT 
        ci.screen_location,
        COUNT(*) as item_count,
        COUNT(CASE WHEN ci.is_active = TRUE THEN 1 END) as active_count
      FROM content_items ci
      WHERE ci.screen_location LIKE 'refinance_mortgage_%'
      GROUP BY ci.screen_location
      ORDER BY ci.screen_location
    `);
    
    console.log(`Found ${verifyResult.rows.length} mortgage refinancing screens:`);
    verifyResult.rows.forEach(row => {
      console.log(`  - ${row.screen_location}: ${row.item_count} items (${row.active_count} active)`);
    });

  } catch (error) {
    console.error('‚ùå Error adding mortgage refinancing content:', error);
    await pool.query('ROLLBACK');
  } finally {
    await pool.end();
  }
}

addMortgageRefiContent(); 